<?php

/**

 * Magento

 *

 * NOTICE OF LICENSE

 *

 * This source file is subject to the Academic Free License (AFL 3.0)

 * that is bundled with this package in the file LICENSE_AFL.txt.

 * It is also available through the world-wide-web at this URL:

 * http://opensource.org/licenses/afl-3.0.php

 * If you did not receive a copy of the license and are unable to

 * obtain it through the world-wide-web, please send an email

 * to license@magentocommerce.com so we can send you a copy immediately.

 *

 * DISCLAIMER

 *

 * Do not edit or add to this file if you wish to upgrade Magento to newer

 * versions in the future. If you wish to customize Magento for your

 * needs please refer to http://www.magentocommerce.com for more information.

 *

 * @category    design

 * @package     base_default

 * @copyright   Copyright (c) 2014 Magento Inc. (http://www.magentocommerce.com)

 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)

 */

?>

<?php 

      

unset($_SESSION[product_sku]);



$storeId = Mage::app()->getStore()->getStoreId();



$order = Mage::getModel('sales/order')->loadByIncrementId($this->getOrderId());

if($order->getCustomerId() === NULL)

{

$customerName = $order->getBillingAddress()->getName();

$customerEmail = $order->getBillingAddress()->getEmail();





}

else

{

$customer = Mage::getModel('customer/customer')->load($order->getCustomerId());

$customerName = $order->getCustomerName();

$customerEmail = $order->getCustomerEmail();





}

if ($order->getCustomerIsGuest()) {

    $templateId = Mage::getStoreConfig(Mage_Sales_Model_Order::XML_PATH_EMAIL_GUEST_TEMPLATE, $storeId);

    $customerName = $order->getBillingAddress()->getName();

} else {

    $templateId = Mage::getStoreConfig(Mage_Sales_Model_Order::XML_PATH_EMAIL_TEMPLATE, $storeId);

    $customerName = $order->getCustomerName();

}



?>







<div class="confirm_div">

	<div class="page-title">

		<h1><?php echo $this->__('Your order has been received.') ?></h1>

	</div>

	<?php echo $this->getMessagesBlock()->getGroupedHtml() ?>

	<h2 class="sub-title"><?php echo $this->__('Thank you for your purchase!') ?></h2>

	 

	<?php if ($this->getOrderId()):?>

	<?php if ($this->getCanViewOrder()) :?>

		<p><?php echo $this->__('Your order # is: %s.', sprintf('<a href="%s">%s</a>', $this->escapeHtml($this->getViewOrderUrl()), $this->escapeHtml($this->getOrderId()))) ?></p>

	<?php  else :?>

		<p><?php echo $this->__('Your order # is: %s.', $this->escapeHtml($this->getOrderId())) ?></p>

	<?php endif;?>

		<p><?php echo $this->__('You will receive an order confirmation email with details of your order and a link to track its progress.') ?></p>

	<?php if ($this->getCanViewOrder() && $this->getCanPrintOrder()) :?>

		<p>

			<?php echo $this->__('Click <a href="%s" onclick="this.target=\'_blank\'">here to print</a> a copy of your order confirmation.', $this->getPrintUrl()) ?>

			<?php echo $this->getChildHtml() ?>

		</p>

	<?php endif;?>

	<?php endif;?>



	<?php if ($this->getAgreementRefId()): ?>

		<p><?php echo $this->__('Your billing agreement # is: %s.', sprintf('<a href="%s">%s</a>', $this->escapeHtml($this->getAgreementUrl()), $this->escapeHtml($this->getAgreementRefId())))?></p>

	<?php endif;?>



	<?php if ($profiles = $this->getRecurringProfiles()):?>

	<p><?php echo $this->__('Your recurring payment profiles:'); ?></p>

	<ul class="disc">

	<?php foreach($profiles as $profile):?>

	<?php $profileIdHtml = ($this->getCanViewProfiles() ? sprintf('<a href="%s">%s</a>', $this->escapeHtml($this->getProfileUrl($profile)), $this->escapeHtml($this->getObjectData($profile, 'reference_id'))) : $this->escapeHtml($this->getObjectData($profile, 'reference_id')));?>

		<li><?php echo $this->__('Payment profile # %s: "%s".', $profileIdHtml, $this->escapeHtml($this->getObjectData($profile, 'schedule_description')))?></li>

	<?php endforeach;?>

	</ul>

	<?php endif;?>



	<div class="buttons-set">

		<button type="button" class="button" title="<?php echo $this->__('Continue Shopping') ?>" onclick="window.location='<?php echo $this->getUrl() ?>'"><span><span><?php echo $this->__('Continue Shopping') ?></span></span></button>

	</div>

</div>

<?php

// initialize the core mailer model and mail info model



$mailer = Mage::getModel('core/email_template_mailer');

$emailInfo = Mage::getModel('core/email_info');

//addTo($mailaddress) specifies the receiver(s) of the mail

$emailInfo->addTo($customerEmail);

$mailer->addEmailInfo($emailInfo);
 $payment_method = $order->getPayment()->getMethodInstance()->getTitle();



// Set all required params and send emails

$mailer->setSender(Mage::getStoreConfig(Mage_Sales_Model_Order::XML_PATH_EMAIL_IDENTITY, $storeId));

$mailer->setStoreId($storeId);

$mailer->setTemplateId($templateId);

// the template params are used in the template file via {{var order.customer_name}}

$mailer->setTemplateParams(

    array(

        'order'        => $order,

        'billing'      => $order->getBillingAddress(),

        'payment_html' => $payment_method

    )

);

// send out the mail

$mailer->send();



//// The Id you just marked...

//$templateId = 1;

//

//// Define the sender, here we query Magento default email (in the configuration)

//// For customer support email, use : 'trans_email/ident_support/...'

//$sender = Array('name' => Mage::getStoreConfig('trans_email/ident_general/name'),

//                'email' => Mage::getStoreConfig('trans_email/ident_general/email'));

//

//// Set you store

//// This information may be taken from the current logged in user

//$store = Mage::app()->getStore();



// In this array, you set the variables you use in your template



// if ($this->getOrderId()){

//        

//        

//        $vars = Array('my_var' => $my_var,

//              'another_var' => 12,

//              'order_id'=>$this->getOrderId());

//

//// You don't care about this...        

//$translate  = Mage::getSingleton('core/translate');

//        

//// Send your email

//Mage::getModel('core/email_template')->sendTransactional($templateId,

//                                                         $sender,

//                                                         'gurnamesingh@gmail.com',

//                                                         'Gurname Singh',

//                                                         $vars,

//                                                         $store->getId());

//

//// You don't care as well        

//$translate->setTranslateInline(true);

 //}

?>